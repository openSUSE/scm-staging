---
name: CI

on:
  push:
    branches:
      - "main"
  pull_request:

jobs:
  format:
    name: Ensure code is properly formatted
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: poetry-${{ hashFiles('poetry.lock') }}

      - run: |
          pip install --upgrade poetry
          poetry install
          poetry run black --check --diff .


  docs:
    name: build the documentation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: poetry-${{ hashFiles('poetry.lock') }}

      - run: |
          pip install --upgrade poetry
          poetry install
          poetry run sphinx-build -W source/ build/

      - name: upload the build directory
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./build/
          if-no-files-found: error

  deploy:
    name: deploy to the gh-pages branch
    runs-on: ubuntu-latest
    needs: docs
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: build
          path: ./build

      - run: touch ./build/.nojekyll

      - name: deploy to github pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: build

  ci:
    name: Run the integration tests
    runs-on: ubuntu-latest

    steps:
      - name: Public IP
        id: public_ip
        uses: haythem/public-ip@v1.3

      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: poetry-${{ hashFiles('poetry.lock') }}

      - run: pip install --upgrade poetry
      - run: poetry install

      - name: Run the full integration tests
        run: poetry run pytest -vv
        env:
          WEBHOOK_IP: ${{ steps.public_ip.outputs.ipv4 }}
          OSC_PASSWORD: ${{ secrets.OSC_PASSWORD }}
          GITEA_API_KEY: ${{ secrets.GITEA_API_KEY }}

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     fail_ci_if_error: true
